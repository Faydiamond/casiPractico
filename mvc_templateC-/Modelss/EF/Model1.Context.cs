//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Modelss.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class pizeerriaEntities : DbContext
    {
        public pizeerriaEntities()
            : base("name=pizeerriaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<adicionales> adicionales { get; set; }
        public virtual DbSet<estados> estados { get; set; }
        public virtual DbSet<ordenes> ordenes { get; set; }
        public virtual DbSet<productos> productos { get; set; }
        public virtual DbSet<roles> roles { get; set; }
        public virtual DbSet<tamanos> tamanos { get; set; }
        public virtual DbSet<usuarios> usuarios { get; set; }
    
        public virtual int create_producto(string producto, string descripcion, Nullable<int> stock, Nullable<double> precio_venta)
        {
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            var precio_ventaParameter = precio_venta.HasValue ?
                new ObjectParameter("precio_venta", precio_venta) :
                new ObjectParameter("precio_venta", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("create_producto", productoParameter, descripcionParameter, stockParameter, precio_ventaParameter);
        }
    
        public virtual ObjectResult<Login_Result> Login(string correo, string clave)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Login_Result>("Login", correoParameter, claveParameter);
        }
    }
}
